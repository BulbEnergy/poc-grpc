"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Territory:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _TerritoryEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Territory.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    GB: _Territory.ValueType  # 0
    ES: _Territory.ValueType  # 1
    FR: _Territory.ValueType  # 2
    US_TX: _Territory.ValueType  # 3
class Territory(_Territory, metaclass=_TerritoryEnumTypeWrapper):
    """
    Type definitions:
    All fields are indexed. The idea is to append so the contract changes incrementally.
    - Enum's index starts at 0
    - message's index starts at 1

    """
    pass

GB: Territory.ValueType  # 0
ES: Territory.ValueType  # 1
FR: Territory.ValueType  # 2
US_TX: Territory.ValueType  # 3
global___Territory = Territory


class GetAccountRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    account_id: builtins.int
    def __init__(self,
        *,
        account_id: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["account_id",b"account_id"]) -> None: ...
global___GetAccountRequest = GetAccountRequest

class GetAccountResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    TERRITORY_FIELD_NUMBER: builtins.int
    INDUSTRY_IDS_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    account_id: builtins.int
    territory: global___Territory.ValueType
    @property
    def industry_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    email: typing.Text
    def __init__(self,
        *,
        account_id: builtins.int = ...,
        territory: global___Territory.ValueType = ...,
        industry_ids: typing.Optional[typing.Iterable[builtins.int]] = ...,
        email: typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_email",b"_email","email",b"email"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_email",b"_email","account_id",b"account_id","email",b"email","industry_ids",b"industry_ids","territory",b"territory"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_email",b"_email"]) -> typing.Optional[typing_extensions.Literal["email"]]: ...
global___GetAccountResponse = GetAccountResponse

class StreamIndustryIdsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    account_id: builtins.int
    def __init__(self,
        *,
        account_id: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["account_id",b"account_id"]) -> None: ...
global___StreamIndustryIdsRequest = StreamIndustryIdsRequest

class StreamIndustryIdsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INDUSTRY_ID_FIELD_NUMBER: builtins.int
    industry_id: builtins.int
    def __init__(self,
        *,
        industry_id: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["industry_id",b"industry_id"]) -> None: ...
global___StreamIndustryIdsResponse = StreamIndustryIdsResponse
